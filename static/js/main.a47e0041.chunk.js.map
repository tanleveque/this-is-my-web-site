{"version":3,"sources":["image/profil-picture.jpg","image/IoT-schema.png","image/cultureEasy.png","image/bvsqc.jpg","image/banner-zolertia.png","image/IoT-schema-2.png","image/screenshot-iot-1.png","image/screenshot-iot-2.png","Main.js","articles/IoT.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","className","Container","Row","src","profilpicture","alt","Nav","NavItem","Card","CardImg","iotschema","to","cultureeasy","blockchainvsquantumcomputing","Component","IoT","bannerPage","illuPage1","Col","screenshotIoT1","screenshotIoT2","routes","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a47e0041.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profil-picture.71750add.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IoT-schema.4114c1ce.png\";","module.exports = __webpack_public_path__ + \"static/media/cultureEasy.ee921346.png\";","module.exports = __webpack_public_path__ + \"static/media/bvsqc.0d0c2526.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-zolertia.f6bdf69e.png\";","module.exports = __webpack_public_path__ + \"static/media/IoT-schema-2.7e563ce1.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot-iot-1.95bb2501.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot-iot-2.3aed44ab.png\";","import React, { Component } from 'react';\r\nimport './Main.css';\r\nimport './App.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport profilpicture from './image/profil-picture.jpg';\r\nimport iotschema from './image/IoT-schema.png';\r\nimport cultureeasy from './image/cultureEasy.png';\r\nimport blockchainvsquantumcomputing from './image/bvsqc.jpg';\r\nimport {\r\n  Nav, NavItem,\r\n  Card, CardImg, Row, Container\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"d-none d-md-block d-md-flex flex-row\">\r\n          <h3 className=\"title col-md-6\">Tanneguy Levêque</h3>\r\n          <div className=\"justify-content-end col-md-6 MyNavBar d-flex flex-row\">\r\n            {/* <NavItem className=\"myNavItem font-weight-bold\">Home</NavItem> */}\r\n            <div className=\"myNavItem font-weight-bold\">Info</div>\r\n            <div className=\"myNavItem font-weight-bold\">Work</div>\r\n          </div>\r\n        </header>\r\n\r\n\r\n        <Container>\r\n          <div className=\"spacer\"></div>\r\n          <Row className=\"d-flex flex-column flex-md-row justify-content-center\">\r\n            <div className=\"image-container col-md-4\">\r\n              <img className=\"profil-picture\" src={profilpicture} alt=\"me\" />\r\n              <p className=\"localisation col-12 d-none d-md-block\">Paris, France</p>\r\n            </div>\r\n            <div className=\"details-wrapper col-md-8\">\r\n              <h3 className=\"myName d-md-none\">Tanneguy Levêque</h3>\r\n              <div className=\"details\">\r\n                <p className=\"description-court d-md-none\">Student in Enginering and UX</p>\r\n                <p className=\"description-mid d-none d-md-block\">Je m'appel Tanneguy, je suis étudiant en double\r\n                diplôme ingénieur à l'ECE Paris et UX à Sup de Pub. </p>\r\n              </div>\r\n            </div>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"localisation col-12 col-md-4 d-md-none\">Paris, France</p>\r\n          </Row>\r\n        </Container>\r\n\r\n        {/*         <Container className=\"d-none d-md-block\">\r\n          <div className=\"btnCallToAction\" >\r\n            <Link to={''}> C'est parti !</Link>\r\n          </div>\r\n        </Container>\r\n */}\r\n        <div className=\"profil-content\">\r\n          <Nav className=\"justify-content-center d-md-none\">\r\n            {/* <NavItem className=\"myNavItem font-weight-bold\">Home</NavItem> */}\r\n            <NavItem className=\"myNavItem font-weight-bold\">Info</NavItem>\r\n            <NavItem className=\"myNavItem font-weight-bold\">Work</NavItem>\r\n          </Nav>\r\n\r\n          <Container>\r\n            <Row className=\"myProject flex-column flex-md-row\">\r\n              <div className=\"col-md-4\">\r\n                <Card >\r\n                  <CardImg src={iotschema} alt=\"Iot schema\" />\r\n                  <div className=\"titleBoxShadow\">\r\n                    <Link to={'/IoT'}>Internet of Things : la technologie Zolertia </Link>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <Card >\r\n                  <CardImg src={cultureeasy} alt=\"image culture easy\" />\r\n                  <div className=\"titleBoxShadow\">\r\n                    <Link to={'/IoT'}>Projet étudiant : Culture Easy </Link>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n\r\n              <div className=\"col-md-4\">\r\n                <Card >\r\n                  <CardImg src={blockchainvsquantumcomputing} alt=\"image blockchain et ordinateur quantique\" />\r\n                  <div className=\"titleBoxShadow\">\r\n                    <Link to={'/IoT'}>Blockchain vs Quantum Computing</Link>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n          <div className=\"spacer\"></div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"footer\"></div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport './page.css';\r\nimport '../App.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport profilpicture from '../image/profil-picture.jpg';\r\nimport bannerPage from '../image/banner-zolertia.png';\r\nimport illuPage1 from '../image/IoT-schema-2.png';\r\nimport screenshotIoT1 from '../image/screenshot-iot-1.png';\r\nimport screenshotIoT2 from '../image/screenshot-iot-2.png';\r\n\r\nimport { Container, Col, Row } from 'reactstrap';\r\n\r\n\r\nclass IoT extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"banner-page-wrapper \">\r\n                    <div className=\"banner-page\">\r\n                        <img className=\"illustration\" src={bannerPage} alt=\"Projet Zolertia Contiki\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"conteneur-article stack-top\">\r\n                    <div className=\"article-profil-zone\">\r\n                        <div className=\"image-container-page\">\r\n                            <Link className=\"profil-picture\" to={'/'}>\r\n                                <img className=\"profil-picture\" src={profilpicture} alt=\"me\" />\r\n                            </Link>\r\n                        </div>\r\n                        <h5 className=\"titre-article\">Internet of Things : la technologie Zolertia</h5>\r\n                    </div>\r\n                    <div className=\"spacer\"></div>\r\n\r\n                    <div className=\"page-content container\">\r\n\r\n                        <h3 className=\"titre-page-content\">Internet of Things : la technologie Zolertia</h3>\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"text-content text-center\">\r\n\r\n                            <p >L'objectif de ce projet est de se familiariser avec les technologies d’objets connectés (ou IoT : Internet of Things).\r\n                            Nous voulons \"connecter\" un objet, c'est-à-dire ajouter une connexion Internet pour apporter une valeur supplémentaire\r\n                            en terme de fonctionnalité, d’information, d’interaction avec l’environnement ou d’usage.\r\n                        </p>\r\n                            <p>\r\n                                Les objets connectés ont pour vocation d'être utilisés à distance, de manière autonome et sans fil. Ces contraintes\r\n                                demandent une gestion plus efficiente des ressources d'énergies. Il faut donc optimiser la puissance de calcul et la\r\n                                communication.\r\n                        </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"spacer\"></div>\r\n                    <div className=\"banner-page\">\r\n                        <img className=\"illustration\" src={illuPage1} alt=\"illustration schema IoT\"></img>\r\n                    </div>\r\n                    <div className=\"spacer\"></div>\r\n\r\n                    <div className=\"page-content container\">\r\n                        <div className=\"text-content\">\r\n                            <p> Nous avons choisi de connecter un potager afin de pouvoir aider un enfant à juger la nécessité d’allumer ou éteindre\r\n                            la lumière sur les pousses. Le but, ici, est d'ajouter une fonction pédagogique au potager via un capteur de lumière\r\n                            et un retour par un indicateur.</p>\r\n                            <p>La luminosité de la pièce est mesurée par un capteur branché à une première carte Zolertia embarquée.\r\n                            La donnée est envoyée par broadcast à la seconde, celle-ci reliée à un ordinateur.</p>\r\n                            <p>Les données sont traitées par la deuxième carte pour savoir si la luminosité est suffisante ou non et\r\n                            suggère une action à l’enfant via l’intermédiaire d'un écran liée à la carte embarquée.</p>\r\n                            <p>Enfin, une visualisation des données est présente sur le tableau de bord créé sur Unidots, une solution\r\n                            de dashbord web pour IoT.</p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"spacer\"></div>\r\n                    <div>\r\n                        <div>\r\n                            <Row>\r\n                                <Col> <img className=\"illustration\" src={screenshotIoT1} alt=\"screenshot iot 1\"></img> </Col>\r\n                                <Col> <img className=\"illustration\" src={screenshotIoT2} alt=\"screenshot iot 2\"></img></Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"spacer\"></div>\r\n\r\n                    <div className=\"page-content container\">\r\n\r\n                        <div className=\"text-content\">\r\n                            <p>La technologie Zolertia est une solution hardware, ici sous forme d'une carte, fonctionnant avec le protocole 6LoWPan\r\n                            *(IPv6 over Low-power Wireless Personal Area Networks) souvent utilisé pour la domotique. Globalement, le protocole 6LoWPan\r\n                            fait une utilisation plus efficace du protocole IPv6. Il fonctionne à un débit plus faible et il consomme peu d'énergie.\r\n                        Dans notre cas, c'est une solution adéquate.</p>\r\n\r\n                            <p>Nous avons utilisé Contiki, un système d'exploitation open source pour carte basse énergie tel que Zolertia. Il nous a permis de développer\r\n                            les programes nécessaire pour traiter les données du capteur de lumière puis les communiquer à l'autre carte et rendre\r\n                        possible ce projet d'objet connecté.</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"spacer\"></div>\r\n                </div>\r\n                <div className=\"footer\"></div>\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default IoT;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from './Main';\r\nimport IoT from './articles/IoT';\r\n\r\nexport default class routes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/Main\" exact component={Main} />\r\n        <Route path=\"/Iot\" exact component={IoT} />\r\n      </Switch>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Routes from './Routes';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <Routes />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}